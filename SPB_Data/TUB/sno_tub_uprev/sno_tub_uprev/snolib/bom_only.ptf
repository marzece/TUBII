FILE_TYPE=MULTI_PHYS_TABLE;

{
   This is bom_only.ppt.  It is a physical part table 
   used solely for generating a bill of materials across
   multiple boards, each of which may have used slightly
   different nomenclature for identical parts.  For example,
   one designer may have assigned the value "0.1UF" to bypass
   capacitors whereas another designer may have used "0.1 UF"
   where the additional space in between causes the vanilla
   BOM generator to think two different parts have been specified.

   This .ppt file addresses this problem by assigning the same 
   DESC property for cases like the one described above.  Then,
   a semi-intelligent spread sheet can be used to collate
   several BOM files into one large BOM for submission to (say)
   stuffing houses.

   Since two identical parts can have different packages--say, a
   1206 package .01uf cap on the MB vs an 0805 .01uf cap on the DB--
   a separate .ppt file for each board is also used.  See, for example,
   bom_only_DB.ppt.

===========================================================================

   USAGE:

   0.  DO NOT RUN THIS PROGRAM ON YOUR ORIGINAL SET OF SCHEMATICS.
       It will screw up the part numbers and cause you endless headaches.
   1.  Copy your schematics to a scratch area.  For example:
          cp -r my_board/ my_board_bom/ 
   2.  From the syslab interface, modify the setup for the packager-xl
       to look for this .ppt file and a board-specific .ppt file if
       needed.  All .ppt files should be in /tape/snopcb/snolib_fec32
   3.  Run packager-xl (from the unix command line, if you like, type "pxl")
   4.  You will probably find that there are parts from this file which
       your schematic makes reference to.  In that case, either 
       copy over this file to your my_board_bom/ area, modify the packager-xl 
       setup accordingly, modify your local version of this file, and
       go to step 3.
  
       Alternatively, if this file is not in /tape/cowen/cadence but in
       a public area, do step 4 and, once you see that it works, copy
       it back to the public area.  Be sure that your mod will not adversely
       affect other users.  Or at least, put in a comment so people will know
       what happened.  (Comments are enclosed in curly brackets.)

===========================================================================

              Doug Cowen 5/1/96

}

{ Parts specific to the daughter board }

PART 'SNOINT2'
  CLASS = IC
  JEDEC_TYPE = SNOINT2
  : DESC = DESC ;
    CUSTOM (UPENN) = 'CUSTOM-WE PROVIDE'
END_PART

PART 'SNODISC2'
  CLASS = IC
  JEDEC_TYPE = SNODISC2
  : DESC = DESC ;
    CUSTOM (UPENN) = 'CUSTOM-WE PROVIDE'
END_PART

PART 'SNOCMOS7'
  CLASS = IC
  JEDEC_TYPE = SNOCMOS7
  : DESC = DESC ;
    CUSTOM (UPENN) = 'CUSTOM-WE PROVIDE'
END_PART

{ Parts specific to Mother Board }

PART 'CGT24'
  CLASS = IC
  DESC = XILINX XC3030A-7PQ44C, PLCC
  JEDEC_TYPE = PLCC
END_PART

PART 'FIFO_CTRL'
  CLASS = IC
  DESC = XILINX XC3064A-6PC84C, PLCC
  JEDEC_TYPE = PLCC
END_PART

PART 'BREGST'
  CLASS = IC
  DESC = XILINX-3020PC84-70, PLCC
  JEDEC_TYPE = PLCC
END_PART

PART 'BREGS96T'
  CLASS = IC
  DESC = XILINX-3020PC84-70, PLCC
  JEDEC_TYPE = PLCC
END_PART

PART 'SEQUENCER32'
  CLASS = IC
  DESC = XILINX-3064PQ160-100, PLCC
  JEDEC_TYPE = PLCC
END_PART

PART 'SEQ96NEWT'
  CLASS = IC
  DESC = XILINX XC3064A-6PQ160, PLCC
  JEDEC_TYPE = PLCC
END_PART

PART 'EUROCONN'
  CLASS = DISCRETE
  JEDEC_TYPE = EUROCON96
  DESC = 96 PIN FEMALE DIN 41612 Right angle CONNECTOR - AMP 650462-4 or eq.
END_PART

PART 'CONN165'
  CLASS = DISCRETE
  JEDEC_TYPE = CONN165
  DESC = AMP zpack right angle press fit-1 type A and 1 type C - p/n s 100147-1 and 100161-1 (female)
END_PART

PART 'DRAMSIMMB'
  CLASS = discrete
  JEDEC_TYPE = through hole
  DESC = through hole SIMM connector - AMP 7-382486-2-00 
END_PART

PART 'INDUCTOR_L'
  CLASS = DISCRETE
  JEDEC_TYPE = ???
  DESC = 1UH FERRITE BEAD 22 AWG thru hole
END_PART

PART 'LED_L'
  CLASS = DISCRETE
  : COLOR = DESC ;
  { 
    Daughter Board 
  }
  BRIGHT_RED (LED-B_RED) = 'bright red LED ssf-lxh103srd'
  GREEN  (LED-GREEN)     = 'green LED ssf-lxh103gd'
  RED  (LED-RED)         = 'red LED ssf-lxh103id'
  YELLOW (LED-YELLOW)    = 'yellow LED ssf-lxh103yd'
END_PART

{ Parts specific to High Voltage Card }

PART 'RELAY'
  CLASS = DISCRETE
  DESC = American Relays SE051A20 9442 HV Standoff
END_PART

PART 'CONN12'
  CLASS = DISCRETE
  JEDEC_TYPE = CONN12
  DESC = Molex 41815 type A order # 09-48-2121 WE PROVIDE (HV Bus connectors)
END_PART

PART 'CONN16'
  CLASS = DISCRETE
  JEDEC_TYPE = CONN16
  DESC = WE PROVIDE (Paddlecard connector)
END_PART

PART 'CONN24'
  CLASS = DISCRETE
  JEDEC_TYPE = CONN24
  DESC = WE PROVIDE (Paddlecard connector)
END_PART

PART 'CONN8'
  CLASS = DISCRETE
  JEDEC_TYPE = CONN8
  DESC = WE PROVIDE (Paddlecard connector)
END_PART

PART 'GND8'
  CLASS = DISCRETE
  JEDEC_TYPE = GND8
  DESC = WE PROVIDE (Paddlecard connector)
END_PART

PART '2N3906'
  CLASS = DISCRETE
  JEDEC_TYPE = ???
  DESC = 2N3906 transistor (package=through hole) 
END_PART

PART '1N914'
  CLASS = DISCRETE
  JEDEC_TYPE = ???
  DESC = 1N914 DIODE thru hole 100V 500mW 1N4148
END_PART

{Parts specific to Translators - XL1 and XL2 - RVB}

PART '74HCT138_SOIC'
  CLASS = IC
  DESC = hct138 3 to 8 line decoder, SOIC
  JEDEC_TYPE = SOIC  
package = soic_16
END_PART


PART '74HCT139_SOIC'
  CLASS = IC
  DESC = hct139 dual 2 to 4 line decoder, SOIC
  JEDEC_TYPE = SOIC  
package = soic_16
END_PART



PART '74HCT27_SOIC'
  CLASS = IC
  DESC = hct27 triple three input nor, SOIC
  JEDEC_TYPE = SOIC  
package = soic_14
END_PART


PART '74HCT175_SOIC'
  CLASS = IC
  DESC = hct175 quad D flip flop, SOIC
  JEDEC_TYPE = SOIC  
package = soic_16
END_PART



PART '74HCT241_SOIC'
  CLASS = IC
  DESC = hct241 octal non-inverting buffer, SOIC
  JEDEC_TYPE = SOIC
  package = soic_20
END_PART



PART '74HCT365_SOIC'
  CLASS = IC
  DESC = hct365 hex tri-state buffer, SOIC
  JEDEC_TYPE = SOIC  
package = soic_16
END_PART


PART '74HCT366_SOIC'
  CLASS = IC
  DESC = hct366 hex tri-state inverter buffer, SOIC
  JEDEC_TYPE = SOIC  
package = soic_16
END_PART


PART '74HCT393_SOIC'
  CLASS = IC
  DESC = hct393 dual 4 bit binary counter, SOIC
  JEDEC_TYPE = SOIC  
package = soic_14
END_PART


PART 'Address_matcht'
  CLASS = IC
  DESC = Xilinx XC3020-70pc84, plcc
  JEDEC_TYPE = plcc
  package = plcc_84
END_PART


PART 'seldavhit'
  CLASS = IC
  DESC = Xilinx XC3020-70pc84, plcc
  JEDEC_TYPE = plcc
  package = plcc_84
END_PART


PART 'seldavlowt'
  CLASS = IC
  DESC = Xilinx XC3020-70pc84, plcc
  JEDEC_TYPE = plcc
  package = plcc_84
END_PART


PART 'cs_regt'
  CLASS = IC
  DESC = Xilinx XC3020-70pc84, plcc
  JEDEC_TYPE = plcc
  package = plcc_84
END_PART

PART 'am26ls31_l_flat'
  CLASS = IC
  DESC = National DS26ls31cm-nd quad rs485 driver, SOIC16
  JEDEC_TYPE = SOIC
  package = soic_16
END_PART


PART 'am26ls32_l_flat'
  CLASS = IC
  DESC = National DS26ls32cm-nd quad rs485 receiver, SOIC16
  JEDEC_TYPE = SOIC
  package = soic_16
END_PART


PART 'ds3695_l_soic'
  CLASS = IC
  DESC = National DS3695am-nd single rs485 transceiver, SOIC8
  JEDEC_TYPE = SOIC
  package = soic_8
END_PART

PART 'icd2053b'
  CLASS = IC
  DESC = Cypress ICD2053B-s8 programmable clock generator, SOIC8
  JEDEC_TYPE = SOIC
  package = soic_8
END_PART


PART 'LM317T_L'
  CLASS = IC
  DESC = LM317 positive adj. voltage regulator, TO220
  JEDEC_TYPE = to220
END_PART



PART 'xc1736'
  CLASS = IC
  DESC = eight pin dip socket AMP 2-640463-3 or eq.
  JEDEC_TYPE = DIP
  package = dip_8
END_PART

PART 'sg531p'
  CLASS = IC
  DESC = eight pin dip socket AMP 2-640463-3 or eq.
  JEDEC_TYPE = DIP
  package = dip_8
END_PART


PART 'LDR1201_L'
  CLASS = DISCRETE
  DESC = single led display for translator
  END_PART


PART 'BPCAP'
  CLASS = DISCRETE
  DESC = 'CER-X7R-50V-0.1UF-1206-50%'
  VALUE = 0.1UF
  END_PART

PART 'CONN10'
  CLASS = DISCRETE
  DESC = '10 pin low profile shrouded straight male header - Thomas and Betts 609-1027 or eq.' 
  END_PART


PART 'CONN20'
  CLASS = DISCRETE
  DESC = 'ignore' 
  END_PART


PART 'CONN60'
  CLASS = DISCRETE
  DESC = '60 pin low profile shrouded straight male header  -  Thomas and Betts 609-6027 or eq.' 
  END_PART

PART 'play20'
  CLASS = DISCRETE
  DESC = 'ignore'
  END_PART


PART '10H116_PLCC'
  CLASS = IC
  DESC = motorola MC10H116FN ECL triple receiver, PLCC20
  JEDEC_TYPE = PLCC20
END_PART


PART '10H124_PLCC'
  CLASS = IC
  DESC = motorola MC10H124FN quad ttl-mecl translator, PLCC20
  JEDEC_TYPE = PLCC20
END_PART


PART '10H125_PLCC'
  CLASS = IC
  DESC = motorola MC10H125FN quad mecl-ttl translator, PLCC20
  JEDEC_TYPE = PLCC20
END_PART


PART '74AS241_SOIC'
  CLASS = IC
  DESC = AS241 octal buffer/driver, SOIC_20
  JEDEC_TYPE = SOIC
END_PART

PART '74hc4052_SOIC'
  CLASS = IC
  DESC = HC4052 dual 4 channel analog mux, SOIC_16
  JEDEC_TYPE = SOIC
END_PART




{ Parts (potentially) common to all boards }

PART '10101_L_DIP'
  CLASS = IC
  DESC = 10101 ECL quad OR/NOR, DIP
  JEDEC_TYPE = DIP
END_PART

PART '10114_PLCC'
  CLASS = IC
  DESC = 10114 or 10116 ECL triple receiver, PLCC
  JEDEC_TYPE = PLCC
END_PART

PART '10114_L_DIP'
  CLASS = IC
  DESC = 10114 ECL triple receiver, DIP
  JEDEC_TYPE = DIP
END_PART

PART '10116_PLCC'
  CLASS = IC
  DESC = 10116 ECL triple receiver, PLCC
  JEDEC_TYPE = PLCC
END_PART

PART '10124_PLCC'
  CLASS = IC
  DESC = 10124 TTL->ECL converter, PLCC
  JEDEC_TYPE = PLCC
END_PART

PART '10124_DIP'
  CLASS = IC
  DESC = 10124 TTL->ECL converter, DIP
  JEDEC_TYPE = DIP
END_PART

PART '10125_PLCC'
  CLASS = IC
  DESC = 10125 ECL->TTL converter, PLCC
  JEDEC_TYPE = PLCC
END_PART

PART '10131_PLCC'
  CLASS = IC
  DESC = 10131 ECL dual flip-flop, PLCC
  JEDEC_TYPE = PLCC
END_PART

PART '4067B_L_SOIC'
  CLASS = IC
  DESC = 4067B mux/demux, SOIC, wide/narrow?
  JEDEC_TYPE = SOIC
END_PART

PART 'DG506A_L_SOIC'
  CLASS = IC
  DESC = MAXIM DG506ACWI mux/demux, SOIC or cross
  JEDEC_TYPE = SOIC
END_PART

PART '74ALS05_SOIC'
  CLASS = IC
  DESC = ALS05, SOIC
  JEDEC_TYPE = SOIC
END_PART

PART '74F1765_PLCC'
  CLASS = IC
  DESC = f1765 memory controller, PLCC
  JEDEC_TYPE = PLCC
END_PART

PART '74GTL16612'
  CLASS = IC
  DESC = T.I. 74GTL16612DGW GTL/TTL Transceiver, SOIC
  JEDEC_TYPE = SOIC
END_PART

PART '74HC03_DIP'
  CLASS = IC
  DESC = hc03 quad dual nand open drain, dip14, signetics 74hc03NH1 or cross
  JEDEC_TYPE = dip14
END_PART

PART '74HC04_SOIC'
  CLASS = IC
  DESC = hc04 hex inverters, SOIC
  JEDEC_TYPE = SOIC
END_PART

PART '74HC154_SOIC'
  CLASS = IC
  DESC = hc154 demux/decoder, SOIC
  JEDEC_TYPE = SOIC
END_PART

PART '74HC164_SOIC'
  CLASS = IC
  DESC = hc154 demux/decoder, SO16, signetics 74hc164DJ1 or cross
  JEDEC_TYPE = SO16
END_PART

PART '74HC164_DIP'
  CLASS = IC
  DESC = hc154 demux/decoder, dip16, signetics 74hc164NJ1 or cross
  JEDEC_TYPE = dip16
END_PART

PART '74HC4051_L_SOIC'
  CLASS = IC
  DESC = hc4051 8 channel mux/demux, SOIC, wide
  JEDEC_TYPE = SOIC
END_PART

PART '74HC4066_SOIC'
  CLASS = IC
  DESC = hc4066 switch/mux, SOIC
  JEDEC_TYPE = SOIC
END_PART

PART '74HCT00_SOIC'
  CLASS = IC
  DESC = hct00 nand gates, SOIC
  JEDEC_TYPE = SOIC
END_PART

PART '74HCT02_SOIC'
  CLASS = IC
  DESC = hct02 nor gates, SOIC
  JEDEC_TYPE = SOIC
END_PART

PART '74HCT02_DIP'
  CLASS = IC
  DESC = hct02 nor gates, DIP14, signetics 74hct02nh1 or cross
  JEDEC_TYPE = dip14
END_PART

PART '74HCT04_SOIC'
  CLASS = IC
  DESC = hct04 not gates, SOIC
  JEDEC_TYPE = SOIC
END_PART

PART '74HCT05_SOIC'
  CLASS = IC
  DESC = hct05 open collector not gates, SOIC
  JEDEC_TYPE = SOIC
END_PART

PART '74HCT08_SOIC'
  CLASS = IC
  DESC = hct08 and gates, SOIC
  JEDEC_TYPE = SOIC
END_PART

PART '74HCT11_SOIC'
  CLASS = IC
  DESC = hct11 3-input and, SOIC
  JEDEC_TYPE = SOIC
END_PART

PART '74HCT20_SOIC'
  CLASS = IC
  DESC = hct20 dual 4-input nand, SOIC
  JEDEC_TYPE = SOIC
END_PART

PART '74HCT123_SOIC'
  CLASS = IC
  DESC = hct123 one-shot, SOIC
  JEDEC_TYPE = SOIC
END_PART

PART '74HCT123_DIP'
  CLASS = IC
  DESC = hct123 one-shot, DIP16, signetics 74HCT123NJ1 or cross
  JEDEC_TYPE = SOIC
END_PART

PART '74HCT125_SOIC'
  CLASS = IC
  DESC = hct125 buffer, SOIC
  JEDEC_TYPE = SOIC
END_PART

PART '74HCT157_SOIC'
  CLASS = IC
  DESC = hct157 mux, SOIC
  JEDEC_TYPE = SOIC
END_PART

PART '74HCT244_SOIC'
  CLASS = IC
  DESC = hct244 register, SOIC
  JEDEC_TYPE = SOIC
END_PART

PART '74HCT245_SOIC'
  CLASS = IC
  DESC = hct245 bidirectional buffer, SOIC
  JEDEC_TYPE = SOIC
END_PART

PART '74HCT273_SOIC'
  CLASS = IC
  DESC = hct273 register, SOIC, signetics 74hct273DL2 or cross
  JEDEC_TYPE = SOIC
END_PART

PART '74HCT273_DIP'
  CLASS = IC
  DESC = hct273 register, DIP20, signetics 74hct273NL1 or cross
  JEDEC_TYPE = DIP20
END_PART

PART '74HCT32_SOIC'
  CLASS = IC
  DESC = hct32 quad 2 input or gate, SOIC
  JEDEC_TYPE = SOIC
END_PART

PART '74HCT74_SOIC'
  CLASS = IC
  DESC = hct74 dual D-type flip-flop, SOIC
  JEDEC_TYPE = SOIC
  PACKAGE = SOIC_16
END_PART

PART '74HCT374_SOIC'
  CLASS = IC
  DESC = hct374 octal d flip flop, SOIC
  JEDEC_TYPE = SOIC
END_PART

PART '74HCT4002_SOIC'
  CLASS = IC
  DESC = hct4002 quad input nor, SOIC
  JEDEC_TYPE = SOIC
END_PART

PART '74HCT540_SOIC'
  CLASS = IC
  DESC = hct540 octal inverting 3 state buffer, SOIC
  JEDEC_TYPE = SOIC
END_PART

PART '74HCT541_SOIC'
  CLASS = IC
  DESC = hct541 octal non inverting 3 state buffer, SOIC
  JEDEC_TYPE = SOIC
END_PART

PART '7815S_L'
  CLASS = DISCRETE
  DESC = LM7815 positive 15V fixed regulator, SOIC (D2T)
  JEDEC_TYPE = TO220
END_PART

PART '7915S_L'
  CLASS = DISCRETE
  DESC = LM7915 negative 15V fixed regulator, SOIC (D2T)
  JEDEC_TYPE = TO220
END_PART

PART 'AD842'
  CLASS = IC
  DESC = ad842 opamp, SOIC
  JEDEC_TYPE = SOIC
END_PART

PART 'LM310_L'
  CLASS = IC
  DESC = National LM310M08A (LM310D?) voltage follower, SOIC
  JEDEC_TYPE = SOIC
END_PART

PART 'TLC271'
  CLASS = IC
  DESC = Texas Instruments TLC271CD opamp, SOIC
  JEDEC_TYPE = SOIC
END_PART

PART 'TLC272_L'
  CLASS = IC
  DESC = Texas Instruments TLC272CD opamp, SOIC
  JEDEC_TYPE = SOIC
END_PART

PART 'TLC274_SOIC'
  CLASS = IC
  DESC = Texas Instruments TLC274CD opamp, SOIC
  JEDEC_TYPE = SOIC
END_PART

PART 'ADOP177G_L'
  CLASS = IC
  DESC = ultra precision opamp, SOIC, adop177gs 
  JEDEC_TYPE = SOIC
END_PART

PART 'ADREF02C_L'
  CLASS = IC
  DESC = adref02c voltage reference, SOIC
  JEDEC_TYPE = SOIC
END_PART

PART 'LM337T_L'
  CLASS = IC
  DESC = LM337 neg. adj. voltage regulator, TO220
  JEDEC_TYPE = to220
END_PART

PART 'LM337S_L'
  CLASS = IC
  DESC = LM337LM or LM337D neg. adj. voltage regulator, TO263
  JEDEC_TYPE = TO263
END_PART

PART 'LM35DM'
  CLASS = IC
  DESC = Temperature Monitor, National LM35DM SOIC
  JEDEC_TYPE = SOIC
END_PART

PART 'LT1364'
  CLASS = IC
  DESC = High speed OPAMP, LT1364 or AD826AR, SOIC
  JEDEC_TYPE = SOIC
END_PART

PART 'AD826'
  CLASS = IC
  DESC = High speed OPAMP, Analog Devices AD826AR, SOIC
  JEDEC_TYPE = SOIC
END_PART

PART 'MAX120'
  CLASS = IC
  DESC = ADC, MAXIM 120, SOIC
  JEDEC_TYPE = SOIC
END_PART

PART 'MAX120'
  CLASS = IC
  DESC = ADC, MAXIM 120, SOIC
  JEDEC_TYPE = SOIC
END_PART

PART 'AD7575'
  CLASS = IC
  DESC = ADC, AD7575JP or Maxim cross, PLCC
  JEDEC_TYPE = PLCC
END_PART

PART 'MAX507'
  CLASS = IC
  DESC = DAC, MAXIM 507BCWG, SOIC
  JEDEC_TYPE = SOIC
END_PART

PART 'MAX528_SOIC'
  CLASS = IC
  DESC = DAC, MAXIM 528CWG, SOIC-WE PROVIDE
  JEDEC_TYPE = SOIC
END_PART

PART 'MAX529_SOIC'
  CLASS = IC
  DESC = DAC, MAXIM 529CWG, SOIC
  JEDEC_TYPE = SOIC
END_PART

PART 'MIC29201'
  CLASS = IC
  DESC = VOLTAGE REGULATOR, MICREL 29201-5.0BU, TO263-5
  JEDEC_TYPE = TO263
END_PART

PART 'MIC29373'
  CLASS = IC
  DESC = VOLTAGE REGULATOR, MICREL 29373, TO263
  JEDEC_TYPE = TO263
END_PART

PART 'MIC2937A33'
  CLASS = IC
  DESC = VOLTAGE REGULATOR, MICREL 2937A33, TO263
  JEDEC_TYPE = TO263
END_PART

PART 'MIC2941'
  CLASS = IC
  DESC = VOLTAGE REGULATOR, MIC2941ABU or LM2941S or LM2941CS , TO263
  JEDEC_TYPE = TO263
END_PART

PART 'LT1185'
  CLASS = IC
  DESC = VOLTAGE REGULATOR, LINEAR TECH. LT1185CT, TO220-5
  JEDEC_TYPE = TO220
END_PART

PART 'MMBR941'
  CLASS = DISCRETE
  JEDEC_TYPE = SOT-23???
  DESC = Motorola MMBR941LT1
END_PART

PART 'MMBT3906_L'
  CLASS = DISCRETE
  JEDEC_TYPE = SOT-23???
  DESC = Motorola MMBT3906LT1
END_PART

PART 'MMBTH10_L'
  CLASS = DISCRETE
  JEDEC_TYPE = SOT-23???
  DESC = Motorola MMBTH10
END_PART

{ NOTE: don't know why both instances of this device need
        to be here. }

PART 'NM93CS06'
  CLASS = IC
  : PACK_TYPE (OPT='SOIC') = DESC JEDEC_TYPE;
  SOIC (NM93CS06_SOIC) = 'NATIONAL NM93CS06M8' 'SOIC'
  DIP  (NM93CS06_DIP)  = 'NATIONAL NM93CS06 DIP8'   'DIP8'
END_PART

PART 'NM93CS06_SOIC'
  CLASS = IC
  : PACK_TYPE = DESC JEDEC_TYPE;
  SOIC (-SOIC) = 'NATIONAL NM93CS06M8' 'SOIC'
  DIP  (-DIP)  = 'NATIONAL NM93CS06 DIP8'   'DIP8'
END_PART


PART 'INDUCTOR'
  CLASS = DISCRETE
  : VALUE = DESC ;
  {
    Daughter Board
  }
  .39UH (FILT-.39) = '0.39UH'
END_PART


{ 
  Parts to ignore (NOTE-done in the bom template file now.  Not
  necessary!)
}

PART 'TESTPOINT_L'
  CLASS = DISCRETE
  DESC = IGNORE
  JEDEC_TYPE = FEC32DTP
END_PART

PART 'TESTPOINT_LS'
  CLASS = DISCRETE
  DESC = IGNORE
  JEDEC_TYPE = FEC32DTP
END_PART


END.

